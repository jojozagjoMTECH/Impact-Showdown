## You
create a 2 player fighting game using css html and javascript could you make me create a advanced main menu with settings and when the player clicks play it takes them to a character selection screen with mutiple characters and when both players have selected there character it takes them to a map selection screen with multiple maps and when both players are spawn they have friction movement, percentage and ultimate bars that charage up as you damage the other player as the percentage goes and the knockback of the player goes up tell they get knocked off the platform. make the selection screen easy to understand and the character selection so player 1 selects their character then player two show who each character is with different colors. make the player movement smooth and have diffrent obsticals for each map. make it so the players can change there movement controls in the settings the default are wasd for player 1 and ijkl for player two.

Todo List:
-Countdown for battle + Map showcase
-Distruction turning off isnt working
 

Player collistion:
 // Check collision with other players only if not bouncing
        
        // if (!player.knockbackActive) {
        //     const otherPlayer = player === player1 ? player2 : player1;
        //     if (player.x < otherPlayer.x + otherPlayer.width &&
        //         player.x + player.width > otherPlayer.x) {
        //         // Check if the player is touching the top of the other player
        //         if (player.y + player.height >= otherPlayer.y &&
        //             player.y < otherPlayer.y) {
        //             if (player.knockbackActive) {
        //                 player.y = otherPlayer.y - player.height;
        //                 player.bounceCount = (player.bounceCount || 0) + 1; // Increment bounce count
        //                 const dampingFactor = baseDampingFactor + (player.bounceCount * 0.1); // Increase damping factor with each bounce
        //                 player.velocityY = -Math.abs(player.velocityY) / dampingFactor; // Bounce off the other player with reduced speed
        //                 createSmokeVfx(player, "bottom", 50);
        //             } else if (player.velocityY >= 0) { // Ensure the player is falling down onto the other player
        //                 player.y = otherPlayer.y - player.height;
        //                 player.velocityY = 0;
        //                 player.onGround = true;
        //                 player.bounceCount = 0; // Reset bounce count when player lands
        //             }
        //         }
        //         // Check if the player is touching the bottom of the other player
        //         if (player.knockbackActive && player.y <= otherPlayer.y + otherPlayer.height &&
        //             player.y + player.height > otherPlayer.y + otherPlayer.height &&
        //             player.velocityY < 0) { // Ensure the player is moving upwards
        //             player.bounceCount = (player.bounceCount || 0) + 1; // Increment bounce count
        //             const dampingFactor = baseDampingFactor + (player.bounceCount * 0.1); // Increase damping factor with each bounce
        //             player.velocityY = Math.abs(player.velocityY) / dampingFactor; // Bounce off the other player with reduced speed
        //             createSmokeVfx(player, "top", 50);
        //         }
        //     }
        // }